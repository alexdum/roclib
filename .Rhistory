guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
? scale_fill_binned_sequential
hcl_palettes(type = "sequential")
hcl_palettes(plot = TRUE)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp85_20210301-20501130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp85_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp45_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
# output$downloadPlot <- downloadHandler(
# output$downloadPlot <- downloadHandler(
#   filename = function(){paste("input$coolplot",'.png',sep='')},
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
brks
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp85_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
runApp()
runApp()
?mainPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderText
runApp()
runApp()
nms
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF") %>% as.character()
nms
runApp()
runApp()
runApp()
min(brks) > 0
runApp()
r <- brick( "www/data/ncs/changes_ensemble/bc_tasAdjust_rcp45_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF") %>% as.character()
nms
print(seas())
rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
spplot(rs)
rs <- r[[which(nms %in% "SON" )]]
plot(rs)
rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rs
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
rg
#if (min(brks) > 0)
cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
colorspace::scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)
?renderPlot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
brks
r <- brick("www/data/ncs/changes_ensemble/bc_tasAdjust_rcp85_20710301-21001130_seasmean.nc")
# r <- brick("www/data/ncs/changes_ensemble/bc_tasAdjust_rcp85_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF") %>% as.character()
nms
print(seas())
rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
# rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rs
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
print(brks)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
#if (min(brks) > 0)
cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
colorspace::scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?scale_fill_binned_sequential
colorspace::scale_fill_binned_sequential
library(colorpsace)
install.packages("colorspace")
runApp()
library(colorspace)
shiny::runApp()
runApp()
?reactive
runApp()
?reactiveValues
runApp()
?  scale_fill_gradientn(
?  scale_fill_gradientn
runApp()
shiny::runApp()
runApp()
?scale_fill_binned
runApp()
?scale_fill_fermenter
runApp()
scale_fill_fermenter
runApp()
scale_fill_fermenter
runApp()
?scale_fill_fermenter
scale_fill_stepsn
runApp()
brewer.pal(9,"YlOrRd")
brks
rs <- rs()
runApp()
brick("www/data/ncs/changes_ensemble/bc_prAdjust_rcp45_20710301-21001130_seassum.nc")
runApp()
brks <- seq(-50, 50, by = 10)
brks
runApp()
cols <- data.frame(cols = brewer.pal(10,"BrBG"),
brks = seq(-50, 50, by = 10))
data.frame(cols = brewer.pal(10,"BrBG"),
brks = seq(-50, 50, by = 10))
cols <- data.frame(cols = brewer.pal(11,"BrBG"),
brks = seq(-50, 50, by = 10))
brick("www/data/ncs/www/data/ncs/changes_ensemble/bc_prec")
cols
seq(0, 5, by = 0.2)
seq(0, 5, by = 0.5)
cols <- data.frame(cols = brewer.pal(9,"YlOrRd"),
brks = seq(0, 4.5, by = 0.5))
seq(0, 4.5, by = 0.5)
cols <- data.frame(cols = brewer.pal(9,"YlOrRd"),
brks = seq(0.5, 4.5, by = 0.5))
runApp()
cols$cols
?scale_fill_stepsn
topo.colors(12)
cols$cols
cols$brks
runApp()
m<-outer(1:20,1:20,function(x,y) sin(sqrt(x*y)/3))
redblue<-colorRampPalette(c("red","orange","blue"),method="linear")
filled.contour(m,color.palette=redblue)
m<-outer(1:20,1:20,function(x,y) sin(sqrt(x*y)/3))
redblue<-colorRampPalette(c("red","orange","blue"),method="linear")
?colorRampPalette
redblue<-colorRampPalette(c("red","orange","blue"),method="linear")
redblue<-colorRampPalette(c("red","orange","blue"), interpolate="linear")
filled.contour(m,color.palette=redblue)
yb<-colorRampPalette(c("yellow2","goldenrod","darkred"))
filled.contour(m,color.palette=yb)
yb<-colorRampPalette(c("yellow2","goldenrod","darkred"),bias=0.5)
filled.contour(m,color.palette=yb)
## Two ColorBrewer sequential palettes
ylOrBn4<-c("#FFFFD4", "#FED98E", "#FE9929","#CC4C02")
ylGnBl5<-c("#FFFFCC","#C7E9B4","#7FCDBB","#40B6C4","#2C7FB8" ,"#253494")
ylOrBn<-colorRampPalette(ylOrBn4,method="linear")
ylGnBl<-colorRampPalette(ylGnBl5)
filled.contour(m,color.palette=ylOrBn)
ylOrBn<-colorRampPalette(ylOrBn4, interpolate="linear")
ylGnBl<-colorRampPalette(ylGnBl5)
filled.contour(m,color.palette=ylOrBn)
filled.contour(m,color.palette=ylGnBl)
ylOrBn(5)
seq(0.2, 4.8, by = 0.2)
cols <- data.frame(cols = ylOrBn(23),
brks = seq(0.2, 4.8, by = 0.2))
cols <- data.frame(cols = ylOrBn(24),
brks = seq(0.2, 4.8, by = 0.2))
shiny::runApp()
runApp()
seq(0.2, 4.8, by = 0.2)
runApp()
data.frame(cols = brewer.pal(7,"BrBG"),
brks = seq(-30, 30, by = 10))
?geom_raster
runApp()
data.frame(cols = brewer.pal(7,"BrBG"),
brks = seq(-30, 30, by = 10))
?scale_fill_stepsn
runApp()
seq(-30, 30, by = 10)
cols <- data.frame(cols = brewer.pal(7,"BrBG"),
brks = seq(-30, 30, by = 10))
cols <- data.frame(cols = brewer.pal(7,"BrBG"),
brks = seq(-30, 20, by = 10))
runApp()
cols <- data.frame(cols = brewer.pal(6,"BrBG"),
brks = seq(-30, 30, by = 10))
runApp()
seq(-30, 30, by = 10)
runApp()
floor(-4.2/10)
floor(-4.2*10)
ceiling(-4.2*10)
ceiling(-4.2)
floor(-4.2)
runApp()
cols <- data.frame(cols = brewer.pal(9,"BrBG")[2:9],
brks = seq(-30, 30, by = 10))
cols <- data.frame(cols = brewer.pal(9,"BrBG")[3:9],
brks = seq(-30, 30, by = 10))
runApp()
floor(1.6)
plyr::round_any(1.6, 1)
plyr::round_any(1.6, 1, f = floor)
plyr::round_any(1.6, 0.2, f = floor)
plyr::round_any(1.7, 0.2, f = floor)
plyr::round_any(1.8, 0.2, f = floor)
plyr::round_any(1.7, 0.2, f = floor)
plyr::round_any(1.7, 0.2, f = ceilling)
plyr::round_any(1.7, 0.2, f = ceiling)
plyr::round_any(1.6, 0.2, f = ceiling)
plyr::round_any(1.5, 0.2, f = ceiling)
runApp()
brks <- seq(0.2, 5.4, by = 0.2)
brks <-  brks[brks >= plyr::round_any(rg[1], 0.2, f = floor) & brks <=  plyr::round_any(rg[2], 0.2, f = ceiling)]
cols <- data.frame(cols = ylOrBn(length(brks)),
brks = brks)
runApp()
shiny::runApp()
runApp()
?fluidRow
runApp()
?renderMenu
runApp()
?fluirow
?fluidRow
runApp()
grepl(2071, "20710301-21001130", fixed = TRUE)
grepl(2071, "20510301-21001130", fixed = TRUE)
runApp()
install.packages(c("callr", "cli", "landmap", "recipes", "reticulate", "rgee", "spatstat.core", "terra", "tibble"))
runApp()
?tabPanel
runApp()
? navbarPage
runApp()
? sidebarPanel
runApp()
?h4
runApp()
? renderPlo
? renderPlot
? plotOutput
runApp()
?renderPlot
runApp()
?plotOutput
runApp()
>aspect.ratio
aspect.ratio
runApp()
?fluidRow
runApp()
?plotOutput
runApp()
? withProgress
runApp()
?png
runApp()
?labs
?plot.caption
runApp()
?element_text
runApp()
