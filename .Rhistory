#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned() +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
?scale_fill_binned
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned(breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
?guide_coloursteps
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned(breaks = brks,
type = "Heat") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = "Blues") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
library(colorspace)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = "Blues") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = "YlOrRd") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = "YlOrRd", name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
if (min(brks) > 0) cols <- "YlOrRd"
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
? scale_fill_binned_sequential
hcl_palettes(type = "sequential")
hcl_palettes(plot = TRUE)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp85_20210301-20501130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp85_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp45_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C") +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
# output$downloadPlot <- downloadHandler(
# output$downloadPlot <- downloadHandler(
#   filename = function(){paste("input$coolplot",'.png',sep='')},
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
brks
r <- brick("www/data/ncs/changes_ensemble/bc_tasminAdjust_rcp85_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF")
rs <- r[[which(nms %in% "DJF")]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
if (min(brks) > 0) cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = F) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
runApp()
runApp()
?mainPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderText
runApp()
runApp()
nms
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF") %>% as.character()
nms
runApp()
runApp()
runApp()
min(brks) > 0
runApp()
r <- brick( "www/data/ncs/changes_ensemble/bc_tasAdjust_rcp45_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF") %>% as.character()
nms
print(seas())
rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
spplot(rs)
rs <- r[[which(nms %in% "SON" )]]
plot(rs)
rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rs
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
rg
#if (min(brks) > 0)
cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
colorspace::scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)
?renderPlot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
brks
r <- brick("www/data/ncs/changes_ensemble/bc_tasAdjust_rcp85_20710301-21001130_seasmean.nc")
# r <- brick("www/data/ncs/changes_ensemble/bc_tasAdjust_rcp85_20710301-21001130_seasmean.nc")
nms <- names(r) %>% gsub("X", "",.) %>% as.numeric() %>%  as.Date(origin = "1970-01-01") %>% seas::mkseas("DJF") %>% as.character()
nms
print(seas())
rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
# rs <- r[[which(nms %in% "SON" )]] %>% rasterToPoints() %>% as_tibble()
names(rs)[3] <- "values"
rs
rg <- range(rs$values) %>% round(1)
brks <- seq(rg[1], rg[2], by = 0.2)
print(brks)
rs$values[rs$values > rg[2]] <- rg[2]
rs$values[rs$values < rg[1]] <- rg[1]
#if (min(brks) > 0)
cols <- "YlOrRd"
ggplot() +
geom_raster(data = rs, aes(x = x, y = y,
fill = values),interpolate = T) +
geom_sf(fill = "transparent", data = judete) +
geom_sf_text(aes(label = JUDET),colour = "darkgrey",size = 3.15,data = judete)+
# make title bold and add space
#
# scale_fill_gradientn(name = "    °C",
#                      limits = c(rg[1], rg[2]),
#                      breaks = brks,
#                      colors = cols)+
colorspace::scale_fill_binned_sequential(palette = cols, name = "    °C", breaks = brks) +
# change color scale
#geom_tile(data = hill_spdf, aes(x = x, y = y, fill = value)) +
#scale_fill_gradient(low = "black", high = "white") +
#new_scale_fill() +
#geom_tile(data = dem_spdf, aes(x = x, y = y, fill = value), alpha=0.4)
labs(caption = "Database: @MeteoRomania") +
xlab("") + ylab("") +
theme_bw() +
guides(fill = guide_colourbar(barwidth = 1.0, barheight = 14.0, title.position = "top")) +
theme( legend.position = "right" )   #c(.93,.72)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
